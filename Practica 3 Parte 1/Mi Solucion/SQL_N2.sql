CLEAR SCREEN

COMMIT;

EXECUTE probar_mi_t2;

DROP SEQUENCE SEQ_T2;
CREATE SEQUENCE SEQ_T2 MINVALUE 0 MAXVALUE 1 START WITH 0 INCREMENT BY 1 CYCLE NOCACHE;

CREATE OR REPLACE PROCEDURE PROBAR_MI_T2 AS
BEGIN
    
    SET TRANSACTION ISOLATION LEVEL SERIALIZABLE; -- NAME 'T2';
    -- SET TRANSACTION ISOLATION LEVEL READ COMMITTED; -- NAME 'T2'; -- POR DEFECTO

    mostrar_tabla_compras('ANTES DE QUE T2 REALIZE SUS 3 PRIMEROS INSERT.');

    INSERT INTO Compras VALUES ('00000003', '30000020',08, 001,'TP1',1111);
    INSERT INTO Compras VALUES ('00000004', '40000200',18, 002,'TP2',1010);
    INSERT INTO Compras VALUES ('00000005', '50000400',28, 003,'TP3',0101);
    
    mostrar_tabla_compras('DESPUES DE QUE T2 HAYA INSERTADO SUS 3 PRIMEROS INSERT.');
    
    TRABAJANDO_T2(5);
    
    mostrar_tabla_compras('ANTES DE QUE T2 REALIZE SUS 3 SEGUNDOS INSERT.');
    
    INSERT INTO Compras VALUES ('00000003', '30000020',07, 009,'TP9',9999);
    INSERT INTO Compras VALUES ('00000004', '40000200',17, 008,'TP8',9090);
    INSERT INTO Compras VALUES ('00000005', '50000400',27, 007,'TP7',0909);
    
    mostrar_tabla_compras('DESPUES DE QUE T2 HAYA INSERTADO SUS 3 SEGUNDOS INSERT.');
    
    TRABAJANDO_T2(5);
    
END;
/



CREATE OR REPLACE PROCEDURE TRABAJANDO_T2(SEGUNDOS IN NUMBER) AS

    ESTADO_ACTUAL NUMBER;
    ESTADO_ANTERIOR NUMBER;
    numeroT varchar(50);
    
BEGIN
    
    LOOP
        
        SELECT  SEQ_T2.NEXTVAL into ESTADO_ACTUAL FROM dual ; 
        
        IF  ESTADO_ACTUAL = ESTADO_ANTERIOR THEN EXIT;
        ELSE
   
            ESTADO_ANTERIOR := ESTADO_ACTUAL;
            DORMIR(5);
   
        END IF;
   
    END LOOP;
  
   SELECT dbms_transaction.local_transaction_id into numeroT FROM dual;
    
    DBMS_OUTPUT.PUT_LINE('SE HA DORMIDO LA TRANSACCION CON ID: ' || numeroT);
    DBMS_OUTPUT.PUT_LINE('TRABAJANDO_T2: HE TERMINADO DE TRABAJAR.');

END;
/

create or replace PROCEDURE PARTIR_TABLA_INVIERTE AS

    Tcoderror NUMBER;
    Ttexterror VARCHAR2(100);

    CONTADOR NUMBER := 0;
    INDICE_SECUENCIA NUMBER;
    PLSQLBLOCK VARCHAR2(500);

BEGIN

    FOR REGISTRO IN (SELECT * FROM INVIERTE)
    LOOP

        CREA_SEC_INVERSION(REPLACE(UPPER(REGISTRO.NOMBREE),' ',''));
        CREA_TABLA_INVERSIONES(REPLACE(UPPER(REGISTRO.NOMBREE),' ',''));

        PLSQLBLOCK := 'BEGIN :a := SEC_' || REPLACE(UPPER(REGISTRO.NOMBREE),' ','') || '.NEXTVAL; END;';
        EXECUTE IMMEDIATE PLSQLBLOCK USING OUT INDICE_SECUENCIA;

        --DBMS_OUTPUT.PUT_LINE(INDICE_SECUENCIA || '+' || REGISTRO.DNI || '+' || REGISTRO.CANTIDAD || '+' || REGISTRO.TIPO);

        EXECUTE IMMEDIATE 'SELECT COUNT(*) FROM ' || REPLACE(UPPER(REGISTRO.NOMBREE), ' ', '') || ' WHERE DNI = ' || CHR(39) || REGISTRO.DNI || CHR(39) || ' AND CANTIDAD = ' || 
        CHR(39) || REGISTRO.CANTIDAD || CHR(39) || ' AND REGISTRO = ' || CHR(39) || REGISTRO.CANTIDAD || CHR(39) || REGISTRO.TIPO || '' INTO CONTADOR;

        IF(CONTADOR = 0) THEN

            PLSQLBLOCK := 'BEGIN INSERT INTO INVERSIONES_' || REPLACE(UPPER(REGISTRO.NOMBREE), ' ', '') || ' VALUES (:a, :b, :c, :d); END;'; 
            EXECUTE IMMEDIATE PLSQLBLOCK USING IN INDICE_SECUENCIA, REGISTRO.DNI, REGISTRO.CANTIDAD, REGISTRO.TIPO;

        ELSE

            DBMS_OUTPUT.PUT_LINE('FILA REPETIDA.');

        END IF;

    END LOOP;

EXCEPTION

  WHEN OTHERS THEN

  Tcoderror:= SQLCODE;
  Ttexterror:= SUBSTR(SQLERRM,1, 100);
  DBMS_output.put_line(PLSQLBLOCK);
  DBMS_output.put_line('Sale por una excepcion: ' || Tcoderror ||   '  -- ' || Ttexterror );

END PARTIR_TABLA_INVIERTE;

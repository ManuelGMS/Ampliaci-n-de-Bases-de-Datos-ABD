create or replace PROCEDURE GESTION_INVERSION(
DNI_INVERSOR INVIERTE.DNI%TYPE,
NOMBRE_EMPRESA INVIERTE.NOMBREE%TYPE,
CANTIDAD_INVERTIDA INVIERTE.CANTIDAD%TYPE,
TIPO_INVERSION INVIERTE.TIPO%TYPE
) AS

    EXISTE_EMPRESA NUMBER;
    INDICE_SECUENCIA NUMBER;
    PLSQLBLOCK VARCHAR2(500);

    Tcoderror NUMBER;
    Ttexterror VARCHAR2(100);

BEGIN

    DBMS_OUTPUT.PUT_LINE('PARAMETROS: ' || DNI_INVERSOR || ' , ' || NOMBRE_EMPRESA || ' , '	|| CANTIDAD_INVERTIDA || ' , ' || TIPO_INVERSION);

    SELECT COUNT(*) INTO EXISTE_EMPRESA FROM EMPRESA WHERE UPPER(RTRIM(NOMBREE)) = UPPER(RTRIM(NOMBRE_EMPRESA));

    IF (EXISTE_EMPRESA = 0) THEN 

        DBMS_OUTPUT.PUT_LINE('LA EMPRESA NO EXISTE, NO SE REALIZARA NINGUNA ACCION.');

    ELSE

        CREA_SEC_INVERSION(NOMBRE_EMPRESA);
        CREA_TABLA_INVERSIONES(NOMBRE_EMPRESA);

        PLSQLBLOCK := 'BEGIN :a := SEC_' || REPLACE(UPPER(NOMBRE_EMPRESA),' ','') || '.NEXTVAL; END;';
        EXECUTE IMMEDIATE PLSQLBLOCK USING OUT INDICE_SECUENCIA;

        PLSQLBLOCK := 'BEGIN INSERT INTO INVERSIONES_' || REPLACE(UPPER(NOMBRE_EMPRESA), ' ', '') || ' VALUES (:a, :b, :c, :d); END;'; 
        EXECUTE IMMEDIATE PLSQLBLOCK USING IN INDICE_SECUENCIA, DNI_INVERSOR, CANTIDAD_INVERTIDA, TIPO_INVERSION;

        DBMS_OUTPUT.PUT_LINE('SE HA INSERTADO EN INVIERTE_' || REPLACE(NOMBRE_EMPRESA,' ', '') || ' LOS VALORES: ' || INDICE_SECUENCIA || ' , ' || DNI_INVERSOR || ' , ' || CANTIDAD_INVERTIDA || ' , ' || TIPO_INVERSION);

    END IF;

EXCEPTION

  WHEN OTHERS THEN

  Tcoderror:= SQLCODE;
  Ttexterror:= SUBSTR(SQLERRM,1, 100);
  DBMS_output.put_line('Sale por una excepcion: ' || Tcoderror ||   '  -- ' || Ttexterror );

END GESTION_INVERSION;